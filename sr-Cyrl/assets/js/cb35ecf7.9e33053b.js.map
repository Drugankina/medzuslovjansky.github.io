{"version":3,"file":"assets/js/cb35ecf7.9e33053b.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/sr-Cyrl/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8,\n\tlicense: 'republish',\n\tauthor: 'Jan van Steenbergen',\n\tlast_update: {\n\t\tauthor: 'Google Translate'\n\t},\n\torigin: 'http://steen.free.fr/interslavic/syntax.html'\n};\nexport const contentTitle = 'Синтакса';\nexport const metadata = {\n  \"unversionedId\": \"learn/grammar/syntax\",\n  \"id\": \"learn/grammar/syntax\",\n  \"title\": \"Синтакса\",\n  \"description\": \"Ред речи је у основи слободан, али преферирани (и стилски најнеутралнији) ред речи је субјекат – глагол – објекат (СВО). Није обавезно, али имајте на уму да стављање објекта испред субјекта неће помоћи да се разјасни значење. Ово није случај са реченицама у којима је или лична заменица или заменицаisv[kto] имају своје облике акузатива, тако да је значење увек јасно.\",\n  \"source\": \"@site/i18n/sr-Cyrl/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md\",\n  \"sourceDirName\": \"learn/grammar\",\n  \"slug\": \"/learn/grammar/syntax\",\n  \"permalink\": \"/sr-Cyrl/learn/grammar/syntax\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/sr-Cyrl/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Google Translate\",\n  \"lastUpdatedAt\": 1711446627,\n  \"formattedLastUpdatedAt\": \"26. мар 2024.\",\n  \"sidebarPosition\": 8,\n  \"frontMatter\": {\n    \"sidebar_position\": 8,\n    \"license\": \"republish\",\n    \"author\": \"Jan van Steenbergen\",\n    \"last_update\": {\n      \"author\": \"Google Translate\"\n    },\n    \"origin\": \"http://steen.free.fr/interslavic/syntax.html\"\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Везници\",\n    \"permalink\": \"/sr-Cyrl/learn/grammar/conjunctions\"\n  },\n  \"next\": {\n    \"title\": \"Формирање речи\",\n    \"permalink\": \"/sr-Cyrl/learn/vocabulary/word-formation\"\n  }\n};\nexport const assets = {\n\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {CustomBeforeSection, TransliteratorElement, CustomAfterSection} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!TransliteratorElement) _missingMdxReference(\"TransliteratorElement\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"синтакса\",\n      children: \"Синтакса\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ред речи је у основи слободан, али преферирани (и стилски најнеутралнији) ред речи је субјекат – глагол – објекат (СВО). Није обавезно, али имајте на уму да стављање објекта испред субјекта неће помоћи да се разјасни значење. Ово није случај са реченицама у којима је или лична заменица или заменица \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" или субјекат или објекат, јер личне заменице и \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" имају своје облике акузатива, тако да је значење увек јасно.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Модификатори обично стоје испред именице. Ни ово није обавезно, али је најнеутралнији и најјаснији начин грађења реченице.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Постоје две врсте питања:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Питања да-не могу се поставити на три различита начина:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"или се од нормалне декларативне реченице разликује само по интонацији:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(TransliteratorElement, {\n                  children: \"Otec kupil knigu?\"\n                }), \" „Да ли је отац купио књигу?”\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"или овој реченици претходи партикула \", _jsx(TransliteratorElement, {\n              children: \"či\"\n            }), \":\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Či otec kupil knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"или је означена честицом питања \", _jsx(TransliteratorElement, {\n              children: \"li\"\n            }), \" која се налази одмах иза фокусне тачке питања, обично глагола:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Kupil li otec knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Остала питања почињу упитном заменицом или прилогом, који се ставља на почетак реченице:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju knigu kupil otec?\"\n            }), \" „Коју књигу је отац купио?“\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Gde otec kupil tu knigu?\"\n            }), \" „Где је отац купио ту књигу?“\\nУ овој врсти реченица, значење се обично објашњава падежом који се користи:\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena ljubi togo muža?\"\n            }), \" „Која жена воли тог човека?” (жена = субјект, мушкарац = објекат)\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju ženu ljubi toj muž?\"\n            }), \" „Коју жену воли тај мушкарац?“ (мушкарац = субјект, жена = објекат)\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Ако је потребно, могуће је користити пасивне реченице које су увек јасне:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena jest ljubjena od togo muža?\"\n            }), \" „Коју жену воли тај мушкарац?“\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Завршне клаузуле се преводе помоћу \", _jsx(TransliteratorElement, {\n        children: \"že\"\n      }), \" или \", _jsx(TransliteratorElement, {\n        children: \"da\"\n      }), \" након чега следи условни:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětet Niderlandiju, že by fotografovali tulipany.\"\n        }), \" „Туристи посећују Холандију да фотографишу лале.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětili Niderlandiju, že by fotografovali tulipany.\"\n        }), \" „Туристи су посетили Холандију да фотографишу лале.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosi jabloka, da by děti byli zdrave.\"\n        }), \" „Доноси јабуке да деца буду здрава.”\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosila jabloka, da by děti byli zdrave.\"\n        }), \" „Донела је јабуке да деца буду здрава.”\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Пасивни глас се може користити, али ако јесте, то треба учинити опрезно. Реченица попут: \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělana\"\n      }), \" или \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělajema\"\n      }), \" „Пизза се прави” је граматички потпуно исправна. Ипак, боље се може избећи, јер оваква конструкција звучи неспретно оним Словенима који нису навикли да често користе глагол „бити“, посебно у садашњем времену. Осим тога, док је сасвим природно за део говорника словенског језика, за друге се пасивни прилог у прошлости уопште не може користити за конструкцију садашњег времена. Стога, ако је субјект познат, боље је користити нормалну активну реченицу. А ако субјекат није познат, као у случају наше пице, могуће је користити облик трећег лица множине без субјекта: \", _jsx(TransliteratorElement, {\n        children: \"Dělajut picu\"\n      }), \" „Они праве пицу, један прави пицу, пица се прави”. Још чешћа је рефлексивна конструкција: \", _jsx(TransliteratorElement, {\n        children: \"Pica dělaje se\"\n      }), \", што буквално значи „Пица се прави сама“ и треба да буде преведена као „Човек прави пицу, пица се прави“.\"]\n    }), \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","license","author","last_update","origin","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","Object","assign","h1","p","ul","li","components","CustomBeforeSection","TransliteratorElement","CustomAfterSection","_missingMdxReference","children","id","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}