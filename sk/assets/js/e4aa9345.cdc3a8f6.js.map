{"version":3,"file":"assets/js/e4aa9345.cdc3a8f6.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/sk/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8\n};\nexport const contentTitle = 'Jednoduchá gramatika';\nexport const metadata = {\n  \"unversionedId\": \"learn/simple-grammar/index\",\n  \"id\": \"learn/simple-grammar/index\",\n  \"title\": \"Jednoduchá gramatika\",\n  \"description\": \"Zjednodušená gramatika alebo :notr[Slovianto] je veľmi zjednodušená forma interslovančiny, ktorá umožňuje neslovanským ľuďom vyjadrovať sa na úplne základnej úrovni pri návšteve slovanských krajín alebo udržiavaní kontaktu so Slovanmi cez internet. Gramatika je obmedzená na nevyhnutné minimum a formy, ktoré nie sú nevyhnutne potrebné, sa nepoužívajú vôbec. Keďže neobsahuje nič, čo by sa nedalo nájsť v slovanských jazykoch, výsledok nebude pre slovanských hovoriacich vyzerať ani znieť príliš trápne, skôr im bude pripomínať jazyk, ktorý používajú malé deti.\",\n  \"source\": \"@site/i18n/sk/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"sourceDirName\": \"learn/simple-grammar\",\n  \"slug\": \"/learn/simple-grammar/\",\n  \"permalink\": \"/sk/learn/simple-grammar/\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/sk/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Yaroslav Serhieiev\",\n  \"lastUpdatedAt\": 1711446627,\n  \"formattedLastUpdatedAt\": \"26. 3. 2024\",\n  \"sidebarPosition\": 8,\n  \"frontMatter\": {\n    \"sidebar_position\": 8\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Aromatizácia\",\n    \"permalink\": \"/sk/learn/vocabulary/flavourisation\"\n  },\n  \"next\": {\n    \"title\": \"Úroveň 1\",\n    \"permalink\": \"/sk/learn/simple-grammar/level-1\"\n  }\n};\nexport const assets = {\n\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {CustomBeforeSection, DocCardList, CustomAfterSection} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"jednoduchá-gramatika\",\n      children: \"Jednoduchá gramatika\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Zjednodušená gramatika alebo \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" je veľmi zjednodušená forma interslovančiny, ktorá umožňuje neslovanským ľuďom vyjadrovať sa na úplne základnej úrovni pri návšteve slovanských krajín alebo udržiavaní kontaktu so Slovanmi cez internet. Gramatika je obmedzená na nevyhnutné minimum a formy, ktoré nie sú nevyhnutne potrebné, sa nepoužívajú vôbec. Keďže neobsahuje nič, čo by sa nedalo nájsť v slovanských jazykoch, výsledok nebude pre slovanských hovoriacich vyzerať ani znieť príliš trápne, skôr im bude pripomínať jazyk, ktorý používajú malé deti.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" možno použiť aj ako prvý krok v procese učenia sa „skutočného“ medzislovanského jazyka. Je skonštruovaný tak, aby sa dal postupne rozširovať o nové kúsky, ktoré sa vyskytujú v zložitejších verziách. Rozlišujeme teda tri rôzne úrovne, pričom každá z nich pridáva nové prvky, ktoré približujú \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" k medzislovančine:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Úroveň 1\"\n        }), \" – najjednoduchšia úroveň: žiadne pohlavie, žiadne pády, iba jednotné/množné číslo, jedna koncovka slovesa na čas\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Úroveň 2\"\n        }), \" – úvod do rodu, jednoduchý model spájania slovies (veci, ktoré možno nájsť vo všetkých slovanských jazykoch)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pracovný názov \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" je portmanteau slovo pre „slovanské esperanto“. Tento názov, aj keď trochu namyslený, odkazuje na jednoduchosť \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \": nemá žiadne pohlavie, žiadne prípady, žiadny aspekt, malú konjugáciu a žiadnu nepravidelnosť. Tu sa však podobnosť s esperantom končí, pretože prostriedky \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" na zjednodušenie sú v skutočnosti oveľa viac podobné tým, ktoré používa \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Interlingua\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","Object","assign","h1","p","span","ul","li","strong","components","CustomBeforeSection","DocCardList","CustomAfterSection","_missingMdxReference","children","id","className","translate","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}