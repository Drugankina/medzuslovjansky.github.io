{"version":3,"file":"assets/js/0e53376d.066904f9.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/ru/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8,\n\tlicense: 'republish',\n\tauthor: 'Jan van Steenbergen',\n\torigin: 'http://steen.free.fr/interslavic/syntax.html'\n};\nexport const contentTitle = 'Синтаксис';\nexport const metadata = {\n  \"unversionedId\": \"learn/grammar/syntax\",\n  \"id\": \"learn/grammar/syntax\",\n  \"title\": \"Синтаксис\",\n  \"description\": \"Порядок слов в основном свободный, но предпочтительный (и стилистически наиболее нейтральный) порядок слов — субъект-глагол-дополнение (SVO). Это не обязательно, но учтите, что размещение объекта перед подлежащим не поможет прояснить смысл. Это не относится к предложениям, в которых личное местоимение или местоимениеisv[kto] имеют свои собственные винительные формы, поэтому значение всегда ясно.\",\n  \"source\": \"@site/i18n/ru/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md\",\n  \"sourceDirName\": \"learn/grammar\",\n  \"slug\": \"/learn/grammar/syntax\",\n  \"permalink\": \"/ru/learn/grammar/syntax\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/ru/docusaurus-plugin-content-docs/current/learn/grammar/syntax.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Yaroslav Serhieiev\",\n  \"lastUpdatedAt\": 1713783474,\n  \"formattedLastUpdatedAt\": \"22 апр. 2024 г.\",\n  \"sidebarPosition\": 8,\n  \"frontMatter\": {\n    \"sidebar_position\": 8,\n    \"license\": \"republish\",\n    \"author\": \"Jan van Steenbergen\",\n    \"origin\": \"http://steen.free.fr/interslavic/syntax.html\"\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Союзы\",\n    \"permalink\": \"/ru/learn/grammar/conjunctions\"\n  },\n  \"next\": {\n    \"title\": \"Словообразование\",\n    \"permalink\": \"/ru/learn/vocabulary/word-formation\"\n  }\n};\nexport const assets = {\n\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {CustomBeforeSection, TransliteratorElement, CustomAfterSection} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!TransliteratorElement) _missingMdxReference(\"TransliteratorElement\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"синтаксис\",\n      children: \"Синтаксис\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Порядок слов в основном свободный, но предпочтительный (и стилистически наиболее нейтральный) порядок слов — субъект-глагол-дополнение (SVO). Это не обязательно, но учтите, что размещение объекта перед подлежащим не поможет прояснить смысл. Это не относится к предложениям, в которых личное местоимение или местоимение \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" является подлежащим или дополнением, поскольку личные местоимения и \", _jsx(TransliteratorElement, {\n        children: \"kto\"\n      }), \" имеют свои собственные винительные формы, поэтому значение всегда ясно.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Модификаторы обычно предшествуют существительному. Это тоже не обязательно, но это самый нейтральный и понятный способ построения предложения.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Есть два типа вопросов:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Вопросы типа «да-нет» можно задавать тремя разными способами:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"либо оно отличается от нормального повествовательного предложения только интонацией:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [_jsx(TransliteratorElement, {\n                  children: \"Otec kupil knigu?\"\n                }), \" „Отец купил книгу?”\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"или этому предложению предшествует частица \", _jsx(TransliteratorElement, {\n              children: \"či\"\n            }), \":\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Či otec kupil knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"или он отмечен вопросительной частицей \", _jsx(TransliteratorElement, {\n              children: \"li\"\n            }), \", расположенной сразу после фокусной точки вопроса, обычно это глагол:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: _jsx(TransliteratorElement, {\n                  children: \"Kupil li otec knigu?\"\n                })\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Остальные вопросы начинаются с вопросительного местоимения или наречия, стоящего в начале предложения:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju knigu kupil otec?\"\n            }), \" «Какую книгу купил отец?»\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Gde otec kupil tu knigu?\"\n            }), \" «Где отец купил эту книгу?»\\nВ предложениях этого типа значение обычно поясняется употребительным падежом:\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena ljubi togo muža?\"\n            }), \" «Какая женщина любит этого мужчину?» (женщина = субъект, мужчина = объект)\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koju ženu ljubi toj muž?\"\n            }), \" «Какую женщину любит этот мужчина?» (мужчина = субъект, женщина = объект)\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"При необходимости можно использовать пассивные предложения, которые всегда понятны:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(TransliteratorElement, {\n              children: \"Koja žena jest ljubjena od togo muža?\"\n            }), \" „Какую женщину любит этот мужчина?”\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Заключительные предложения переводятся с помощью \", _jsx(TransliteratorElement, {\n        children: \"že\"\n      }), \" или \", _jsx(TransliteratorElement, {\n        children: \"da\"\n      }), \", за которыми следует условное выражение:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětet Niderlandiju, že by fotografovali tulipany.\"\n        }), \" «Туристы посещают Нидерланды, чтобы сфотографировать тюльпаны».\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Turisti posětili Niderlandiju, že by fotografovali tulipany.\"\n        }), \" «Туристы посетили Нидерланды, чтобы сфотографировать тюльпаны».\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosi jabloka, da by děti byli zdrave.\"\n        }), \" «Она приносит яблоки, чтобы дети были здоровы».\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(TransliteratorElement, {\n          children: \"Ona prinosila jabloka, da by děti byli zdrave.\"\n        }), \" „Она принесла яблоки, чтобы дети были здоровы.”\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Пассивный залог можно использовать, но в этом случае делать это следует с осторожностью. Предложение типа: \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělana\"\n      }), \" или \", _jsx(TransliteratorElement, {\n        children: \"Pica je dělajema\"\n      }), \" «Пицца готовится» грамматически совершенно правильно. Однако лучше этого избегать, поскольку подобная конструкция звучит неуклюже для тех славян, которые не привыкли часто употреблять глагол «быть», особенно в настоящем времени. Кроме того, если для части славянских носителей это совершенно естественно, то для других пассивное причастие прошедшего времени вообще не может использоваться для конструкции настоящего времени. Поэтому, если подлежащее известно, лучше использовать обычное активное предложение. А если подлежащее неизвестно, как в случае с нашей пиццей, то можно использовать форму множественного числа от третьего лица без подлежащего: \", _jsx(TransliteratorElement, {\n        children: \"Dělajut picu\"\n      }), \" «Они делают пиццу, один делает пиццу, пиццу готовят». Еще более распространена возвратная конструкция: \", _jsx(TransliteratorElement, {\n        children: \"Pica dělaje se\"\n      }), \", которая буквально означает «Пицца готовится сама» и должна переводиться как «Пиццу готовят, пиццу готовят».\"]\n    }), \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","license","author","origin","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","Object","assign","h1","p","ul","li","components","CustomBeforeSection","TransliteratorElement","CustomAfterSection","_missingMdxReference","children","id","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}