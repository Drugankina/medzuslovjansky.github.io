{"version":3,"file":"assets/js/e8fae49b.7df24f9a.js","mappings":"kPAEO,MAAMA,EAAc,CAAC,EACfC,EAAe,cACfC,EAAW,CACtB,KAAQ,MACR,UAAa,UACb,OAAU,0BACV,MAAS,cACT,YAAe,2GACf,YAAe,CAAC,EAChB,UAAY,GAEDC,EAAS,CAEtB,EAIaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAc,CAClBC,EAAG,IACHC,GAAI,KACJC,EAAG,QACA,aACAJ,EAAMK,YAEX,OAAO,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKL,EAAYE,GAAI,CAC9BI,GAAI,cACJD,SAAU,gBACR,MAAM,SAAKL,EAAYG,EAAG,CAC5BE,SAAU,6GACR,MAAM,SAAKL,EAAYG,EAAG,CAC5BE,SAAU,+FACR,MAAM,SAAKL,EAAYG,EAAG,CAC5BE,SAAU,kHACR,MAAM,SAAKL,EAAYG,EAAG,CAC5BE,UAAU,SAAKL,EAAYC,EAAG,CAC5BM,KAAM,yEACNF,SAAU,+EAIlB,CACe,SAASG,EAAWT,EAAQ,CAAC,GAC1C,MAAOU,QAASC,GAAa,KACxB,aACAX,EAAMK,YAEX,OAAOM,GAAY,SAAKA,EAAW,IAC9BX,EACHM,UAAU,SAAKP,EAAmB,IAC7BC,MAEFD,EAAkBC,EACzB,C,0DCxBO,MAAMY,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,IAChC,CAACS,EAAmBT,GACzB,CAGA,MAAMU,EAAc,CAAC,EAQd,SAASC,GAAY,WAACX,EAAU,SAAEC,EAAQ,qBAAEW,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfZ,EACHA,EAAW,CAAC,GACZA,GAAcU,EAEJF,EAAiBR,GAG5B,gBACLO,EAAWO,SACX,CAACC,MAAOF,GACRZ,EAEJ,C","sources":["webpack://interslavic-fun/./src/pages/501.mdx","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {};\nexport const contentTitle = 'Please wait';\nexport const metadata = {\n  \"type\": \"mdx\",\n  \"permalink\": \"/mk/501\",\n  \"source\": \"@site/src/pages/501.mdx\",\n  \"title\": \"Please wait\",\n  \"description\": \"This article is not ready yet for your contribution – we're working on its source code in Markdown.\",\n  \"frontMatter\": {},\n  \"unlisted\": false\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h1: \"h1\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"please-wait\",\n      children: \"Please wait\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This article is not ready yet for your contribution – we're working on its source code in Markdown.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Please come back later or take part in the translation of the previous (earlier) articles.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's the progress of Markdown refinement, where you can see which articles are ready for your contribution:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/issues/45\",\n        children: \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/issues/45\"\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","a","h1","p","components","children","id","href","MDXContent","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}