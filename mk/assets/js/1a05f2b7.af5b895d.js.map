{"version":3,"file":"assets/js/1a05f2b7.af5b895d.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/mk/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8\n};\nexport const contentTitle = 'Едноставна граматика';\nexport const metadata = {\n  \"unversionedId\": \"learn/simple-grammar/index\",\n  \"id\": \"learn/simple-grammar/index\",\n  \"title\": \"Едноставна граматика\",\n  \"description\": \"Поедноставената граматика, или :notr[Slovianto], е многу поедноставена форма на меѓусловенски јазик што им овозможува на несловенските луѓе да се изразат на многу основно ниво кога ги посетуваат словенските земји или одржуваат контакт со Словените преку Интернет. Граматиката е ограничена на минимум, а формите кои не се строго неопходни воопшто не се користат. Бидејќи не содржи ништо што не може да се најде во словенските јазици, резултатот нема да изгледа или звучи премногу незгодно за словенските говорители, туку повеќе ќе ги потсетува на јазикот што го користат малите деца.\",\n  \"source\": \"@site/i18n/mk/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"sourceDirName\": \"learn/simple-grammar\",\n  \"slug\": \"/learn/simple-grammar/\",\n  \"permalink\": \"/mk/learn/simple-grammar/\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/mk/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Yaroslav Serhieiev\",\n  \"lastUpdatedAt\": 1709984863,\n  \"formattedLastUpdatedAt\": \"9 мар. 2024 г.\",\n  \"sidebarPosition\": 8,\n  \"frontMatter\": {\n    \"sidebar_position\": 8\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Ароматизација\",\n    \"permalink\": \"/mk/learn/vocabulary/flavourisation\"\n  },\n  \"next\": {\n    \"title\": \"Ниво 1\",\n    \"permalink\": \"/mk/learn/simple-grammar/level-1\"\n  }\n};\nexport const assets = {\n\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {CustomBeforeSection, DocCardList, CustomAfterSection} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"едноставна-граматика\",\n      children: \"Едноставна граматика\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Поедноставената граматика, или \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \", е многу поедноставена форма на меѓусловенски јазик што им овозможува на несловенските луѓе да се изразат на многу основно ниво кога ги посетуваат словенските земји или одржуваат контакт со Словените преку Интернет. Граматиката е ограничена на минимум, а формите кои не се строго неопходни воопшто не се користат. Бидејќи не содржи ништо што не може да се најде во словенските јазици, резултатот нема да изгледа или звучи премногу незгодно за словенските говорители, туку повеќе ќе ги потсетува на јазикот што го користат малите деца.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" може да се користи и како прв чекор во процесот на учење на „вистинскиот“ меѓусловенски јазик. Конструиран е на таков начин што постепено може да се прошири со нови делови и парчиња кои се појавуваат во посложени верзии. Така, разликуваме три различни нивоа, секое од нив додава нови елементи кои го доближуваат \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" до Interslavic:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Ниво 1\"\n        }), \" – наједноставно ниво: без род, без падежи, само еднина/множина, еден глаголски крај по време\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Ниво 2\"\n        }), \" – вовед во род, едноставен модел за конјугирање глаголи (работи што ги има во сите словенски јазици)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Работниот наслов \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" е портманто збор за „словенски есперанто“. Ова име, иако донекаде неразбирливо, се однесува на едноставноста на \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \": нема род, нема падежи, нема аспект, мала конјугација и без неправилност. Сепак, тука завршува сличноста со есперанто, бидејќи средствата за поедноставување на \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" се всушност многу послични на оние што ги користи \", _jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Interlingua\"\n      }), \".\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","Object","assign","h1","p","span","ul","li","strong","components","CustomBeforeSection","DocCardList","CustomAfterSection","_missingMdxReference","children","id","className","translate","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}