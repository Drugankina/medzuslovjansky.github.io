{"version":3,"file":"assets/js/f03f687b.dad5017f.js","mappings":"kPAEO,MAAMA,EAAc,CAC1BC,iBAAkB,EAClBC,QAAS,YACTC,OAAQ,sBACRC,OAAQ,iDAEIC,EAAe,yDACfC,EAAW,CACtB,cAAiB,sBACjB,GAAM,sBACN,MAAS,yDACT,YAAe,48EACf,OAAU,8EACV,cAAiB,gBACjB,KAAQ,kBACR,UAAa,qBACb,OAAS,EACT,UAAY,EACZ,QAAW,+IACX,KAAQ,GACR,QAAW,UACX,cAAiB,WACjB,uBAA0B,qBAC1B,gBAAmB,EACnB,YAAe,CACb,iBAAoB,EACpB,QAAW,YACX,OAAU,sBACV,OAAU,iDAEZ,QAAW,eACX,SAAY,CACV,MAAS,2EACT,UAAa,2BAEf,KAAQ,CACN,MAAS,iFACT,UAAa,4BAGJC,EAAS,CAEtB,EAKaC,EAAM,GACnB,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,MACF,UAAsBL,EAAMM,aAAa,oBAACC,EAAmB,YAAEC,EAAW,mBAAEC,GAAsBR,EAIrG,OAHKQ,GAAoBC,EAAqB,sBAAsB,GAC/DH,GAAqBG,EAAqB,uBAAuB,GACjEF,GAAaE,EAAqB,eAAe,IAC/C,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKV,EAAYG,GAAI,CAC9BQ,GAAI,yDACJD,SAAU,2DACR,MAAM,SAAKJ,EAAqB,CAAC,GAAI,MAAM,SAAKN,EAAYI,EAAG,CACjEM,SAAU,88EACR,MAAM,SAAKV,EAAYI,EAAG,CAC5BM,SAAU,+xCACR,MAAM,SAAKV,EAAYI,EAAG,CAC5BM,SAAU,0gDACR,MAAM,SAAKH,EAAa,CAAC,GAAI,MAAM,SAAKC,EAAoB,CAAC,KAErE,CAOA,QANA,SAAoBT,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAG,UAAsBH,EAAMM,YAC3E,OAAOQ,GAAY,SAAKA,EAAWZ,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DW,UAAU,SAAKZ,EAAmBC,MAC9BD,EAAkBC,EAC1B,EAEA,SAASU,EAAqBE,EAAIG,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOH,EAAK,qEACnF,C,0DC/CO,MAAMK,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBZ,GAC/B,MAAMa,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfX,EACFA,EAAWa,GAGb,IAAIA,KAAsBb,IAChC,CAACa,EAAmBb,GACzB,CAGA,MAAMc,EAAc,CAAC,EAQd,SAASC,GAAY,WAACf,EAAU,SAAEK,EAAQ,qBAAEW,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfhB,EACHA,EAAW,CAAC,GACZA,GAAcc,EAEJF,EAAiBZ,GAG5B,gBACLW,EAAWO,SACX,CAACC,MAAOF,GACRZ,EAEJ,C","sources":["webpack://interslavic-fun/./i18n/bg/docusaurus-plugin-content-docs/current/learn/grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 6,\n\tlicense: 'republish',\n\tauthor: 'Jan van Steenbergen',\n\torigin: 'http://steen.free.fr/interslavic/grammar.html'\n};\nexport const contentTitle = 'Граматика';\nexport const metadata = {\n  \"unversionedId\": \"learn/grammar/index\",\n  \"id\": \"learn/grammar/index\",\n  \"title\": \"Граматика\",\n  \"description\": \"Междуславянският е естествен и много широко разбираем език за славяните. Изцяло се основава на форми, общи за славянските езици, а когато няма общи форми, на мажоритарни решения. Има граматичен род, шест падежа плюс незадължителен звателен, глаголен аспект и пълно спрежение – неща, които почти всеки славянин познава. Освен това съдържа и материал, който липсва в повечето славянски езици, но познаването на който може да бъде от голяма полза за разбирането на езиците, които го използват.\",\n  \"source\": \"@site/i18n/bg/docusaurus-plugin-content-docs/current/learn/grammar/index.md\",\n  \"sourceDirName\": \"learn/grammar\",\n  \"slug\": \"/learn/grammar/\",\n  \"permalink\": \"/bg/learn/grammar/\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/bg/docusaurus-plugin-content-docs/current/learn/grammar/index.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedAt\": 1707582895,\n  \"formattedLastUpdatedAt\": \"10.02.2024 г.\",\n  \"sidebarPosition\": 6,\n  \"frontMatter\": {\n    \"sidebar_position\": 6,\n    \"license\": \"republish\",\n    \"author\": \"Jan van Steenbergen\",\n    \"origin\": \"http://steen.free.fr/interslavic/grammar.html\"\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Произношение\",\n    \"permalink\": \"/bg/learn/pronunciation\"\n  },\n  \"next\": {\n    \"title\": \"Съществителни\",\n    \"permalink\": \"/bg/learn/grammar/nouns\"\n  }\n};\nexport const assets = {\n\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {CustomBeforeSection, DocCardList, CustomAfterSection} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"граматика\",\n      children: \"Граматика\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsx(_components.p, {\n      children: \"Междуславянският е естествен и много широко разбираем език за славяните. Изцяло се основава на форми, общи за славянските езици, а когато няма общи форми, на мажоритарни решения. Има граматичен род, шест падежа плюс незадължителен звателен, глаголен аспект и пълно спрежение – неща, които почти всеки славянин познава. Освен това съдържа и материал, който липсва в повечето славянски езици, но познаването на който може да бъде от голяма полза за разбирането на езиците, които го използват.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"В сравнение с естествените славянски езици този граматичен модел все още е доста прост и правилен. Изключенията са редки и повечето нередности се отстраняват със средства, предоставени от самите славянски езици, без да се въвежда никаква изкуственост.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Този граматичен модел е предназначен предимно за комуникация между славяни от различни националности, но разбира се може да се използва и от неславяни, които искат да могат да общуват на по-сериозно ниво. Подходящ е за контакти и публикации, но и като средство за вникване в природата на славянството.\"\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","license","author","origin","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","Object","assign","h1","p","components","CustomBeforeSection","DocCardList","CustomAfterSection","_missingMdxReference","children","id","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}