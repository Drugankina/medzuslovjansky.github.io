{"version":3,"file":"assets/js/42b35420.89f6380e.js","mappings":"mPAEO,MAAMA,EAAc,CAC1BC,QAAS,CACR,WACA,QAGWC,EAAe,8CACfC,EAAW,CACtB,UAAa,0CACb,QAAW,gHACX,OAAU,+CACV,MAAS,8CACT,YAAe,aACf,KAAQ,2BACR,cAAiB,eACjB,KAAQ,GACR,YAAe,KACf,mBAAqB,EACrB,QAAW,CACT,CACE,KAAQ,yBACR,IAAO,8BACP,SAAY,kCACZ,IAAO,YAET,CACE,KAAQ,sBACR,IAAO,wBACP,SAAY,uJACZ,IAAO,QAGX,YAAe,CACb,QAAW,CACT,WACA,QAGJ,UAAY,EACZ,SAAY,CACV,MAAS,yHACT,UAAa,iDAGJC,EAAS,CACtB,iBAAoB,MAACC,OAAWA,IAMnBC,EAAM,CAAC,CAClB,MAAS,aACT,GAAM,aACN,MAAS,IAEX,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,SACL,UAAsBN,EAAMO,YAC/B,OAAO,UAAM,WAAW,CACtBC,SAAU,EAAC,SAAKP,EAAYG,GAAI,CAC9BK,GAAI,aACJD,SAAU,eACR,MAAM,UAAMP,EAAYI,EAAG,CAC7BG,SAAU,CAAC,8QAA4N,SAAKP,EAAYK,KAAM,CAC5PE,SAAU,cACR,0iBACF,MAAM,UAAMP,EAAYI,EAAG,CAC7BG,SAAU,CAAC,8IAAqH,SAAKP,EAAYK,KAAM,CACrJE,SAAU,OACR,OAAO,SAAKP,EAAYK,KAAM,CAChCE,SAAU,OACR,mEAGV,CAOA,QANA,SAAoBR,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAG,UAAsBH,EAAMO,YAC3E,OAAOI,GAAY,SAAKA,EAAWT,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAC1DQ,UAAU,SAAKT,EAAmBC,MAC9BD,EAAkBC,EAC1B,C,0DCrDO,MAAMY,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,CAGA,MAAMQ,EAAc,CAAC,EAQd,SAASC,GAAY,WAACT,EAAU,SAAEC,EAAQ,qBAAES,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfV,EACHA,EAAW,CAAC,GACZA,GAAcQ,EAEJF,EAAiBN,GAG5B,gBACLK,EAAWO,SACX,CAACC,MAAOF,GACRV,EAEJ,C","sources":["webpack://interslavic-fun/./articles/2024-07-09-diskusija-lj-nj.md?14d5","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tauthors: [\n\t\t'noomorph',\n\t\t'jvs'\n\t]\n};\nexport const contentTitle = 'Asimetrija medžu LJ/NJ i Љ/Њ';\nexport const metadata = {\n  \"permalink\": \"/pl/articles/2024/07/09/diskusija-lj-nj\",\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/articles/2024-07-09-diskusija-lj-nj.md\",\n  \"source\": \"@site/articles/2024-07-09-diskusija-lj-nj.md\",\n  \"title\": \"Asimetrija medžu LJ/NJ i Љ/Њ\",\n  \"description\": \"Motivacija\",\n  \"date\": \"2024-07-09T00:00:00.000Z\",\n  \"formattedDate\": \"9 lipca 2024\",\n  \"tags\": [],\n  \"readingTime\": 6.65,\n  \"hasTruncateMarker\": true,\n  \"authors\": [\n    {\n      \"name\": \"Jaroslav Sergějev\",\n      \"url\": \"https://github.com/noomorph\",\n      \"imageURL\": \"https://github.com/noomorph.png\",\n      \"key\": \"noomorph\"\n    },\n    {\n      \"name\": \"Jan van Steenbergen\",\n      \"url\": \"https://steen.free.fr\",\n      \"imageURL\": \"https://upload.wikimedia.org/wikipedia/commons/5/54/Nieuwjaarsbijeenkomst_Wikimedia_Nederland_21_januari_2017_Museum_Volkenkunde_Leiden_%2827%29.jpg\",\n      \"key\": \"jvs\"\n    }\n  ],\n  \"frontMatter\": {\n    \"authors\": [\n      \"noomorph\",\n      \"jvs\"\n    ]\n  },\n  \"unlisted\": false,\n  \"prevItem\": {\n    \"title\": \"Асиметрија меджу LJ/NJ и Љ/Њ\",\n    \"permalink\": \"/pl/articles/2024/07/09/diskusija-lj-nj-cyrl\"\n  }\n};\nexport const assets = {\n\"authorsImageUrls\": [undefined, undefined],\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [{\n  \"value\": \"Motivacija\",\n  \"id\": \"motivacija\",\n  \"level\": 2\n}];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"motivacija\",\n      children: \"Motivacija\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Už několiko sedmic Jan van Steenbergen jest mnogo zajety s prěvodženjem viki-interfejsa, da byhmo mogli potom spokojno početi rabotu nad MS Vikipedijeju. To jest spěšno dělo, ibo kratko poslě publikacije našego koda \", _jsx(_components.code, {\n        children: \"ISO 639-3\"\n      }), \" uže pojavilo se prědloženje za MS Vikipediju MS projekt v Inkubatoru. Ne hočemo, aby ljudi počeli kopijovati teksty iz Medžuviki, čto jest narušenje avtorskyh prav. Vměsto togo, trěba bude kopirati cělo sodržanje Medžuviki v Inkubator – zajedno s historijeju. V Medžuviki jest avtomatičny transliterator, da by čitatelji mogli izbirati medžu latiniceju i kiriliceju. Očevidno, v Vikipediji on takože bude potrěbny. Tu jest jedin maly problem.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Tutdenj medžuslovjansky pravopis imaje asimetriju medžu latiniceju i kiriliceju, čto se tyče prědavanja digrafov \", _jsx(_components.code, {\n        children: \"lj\"\n      }), \" i \", _jsx(_components.code, {\n        children: \"nj\"\n      }), \" na pismu, i to jest objekt našej diskusije niže.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","authors","contentTitle","metadata","assets","undefined","toc","_createMdxContent","props","_components","Object","assign","h2","p","code","components","children","id","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}